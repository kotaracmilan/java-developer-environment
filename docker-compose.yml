version: '3.9'
services:
  nginx:
    image: nginxproxy/nginx-proxy:latest
    container_name: nginx
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/app.conf:/etc/nginx/conf.d/app.conf
      - /etc/letsencrypt:/ets/letsencrypt
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - /var/log/nginx:/var/log/nginx
    environment:
      - SERVER_URL_GIT=${SERVER_URL_GIT}
      - SERVER_URL_JENKINS=${SERVER_URL_JENKINS}
      - SERVER_URL_REGISTRY=${SERVER_URL_REGISTRY}
      - SERVER_URL_SONARQUBE=${SERVER_URL_SONARQUBE}
    networks:
      - votek-solutions-dev-network
    depends_on:
      - gitlab
      - jenkins
      - registry
      - sonarqube
    links:
      - gitlab
      - jenkins
      - registry
      - sonarqube

  gitlab:
    image: gitlab/gitlab-ee:latest
    container_name: gitlab
    restart: always
    hostname: git.develop.votek.solutions
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'https://${SERVER_URL_JENKINS}'
        # Add any other gitlab.rb configuration here, each on its own line
    ports:
      - 980:80
      - 9443:443
      - 922:22
    volumes:
      - ./gitlab/config:/etc/gitlab
      - ./gitlab/logs:/var/log/gitlab
      - ./gitlab/data:/var/opt/gitlab
    shm_size: '256m'
    networks:
      - votek-solutions-dev-network

  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    privileged: true
    user: root
    ports:
      - 8080:8080
      - 50000:50000
    volumes:
       - ./jenkins:/var/jenkins_home
       - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - votek-solutions-dev-network

  registry:
    image: registry:latest
    container_name: registry
    restart: always
    volumes:
      - ./registry:/var/lib/registry #proveriti
    ports:
      - 5000:5000
    networks:
      - votek-solutions-dev-network
      
  certbot:
    container_name: certbot
    image: certbot/certbot
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
    networks:
      - votek-solutions-dev-network
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  sonarqube:
    image: sonarqube:community
    container_name: sonarqube
    depends_on:
      - db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - ./sonarqube/data:/opt/sonarqube/data
      - ./sonarqube/extensions:/opt/sonarqube/extensions
      - ./sonarqube/logs:/opt/sonarqube/logs
    ports:
      - 9000:9000
    networks:
      - votek-solutions-dev-network

  db:
    image: postgres:latest
    hostname: postgresql
    container_name: postgresql
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - ./postgresql:/var/lib/postgresql
      - ./postgresql/data:/var/lib/postgresql/data
    networks:
      - votek-solutions-dev-network

networks:
  votek-solutions-dev-network:
    driver: bridged
    external: true

      